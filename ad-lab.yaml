---
heat_template_version: wallaby

description: >
  Deploy the servers and network needed for a simple Active Directory Lab
  Two Domain Controllers, a fileserver and two clients.

parameters:
  environment:
    type: string
    description: Type of environment. Typically either "lab" or "demo"
  key_name:
    type: string
    description: Key for encrypting windows passwords in nova
  server_image:
    type: string
    description: Image for Windows Servers
    default: Windows Server 2022 Standard [Evaluation]
  client_image:
    type: string
    description: Image for Windows Clients
    default: Windows 10 22H2 Enterprise [Evaluation]
  external_net:
    type: string
    description: ID or name for the routers external network
    default: ntnu-internal
  ipv6_subnetpool:
    type: string
    description: ID for default IPv6 subnet pool
  server_flavor:
    type: string
    description: Flavor for servers
    default: gx3.4c4r
  client_flavor:
    type: string
    description: Flavor for clients
    default: gx3.4c8r
  allow_rdp_from_v4:
    type: comma_delimited_list
    description: A list of IPv4 networks that will be allowed RDP access
  allow_rdp_from_v6:
    type: comma_delimited_list
    description: A list of IPv6 networks that will be allowed RDP access
  dns_servers:
    type: comma_delimited_list
    default: "192.168.123.10,192.168.123.11"

resources:
# NETWORK
  ms_net:
    type: OS::Neutron::Net

  ms_subnet_v4:
    type: OS::Neutron::Subnet
    properties:
      network: { get_resource: ms_net }
      cidr: 192.168.123.0/24
      gateway_ip: 192.168.123.1
      allocation_pools:
        - start: 192.168.123.100
          end: 192.168.123.254
      dns_nameservers: { get_param: dns_servers }

  ms_subnet_v6:
    type: OS::Neutron::Subnet
    properties:
      network: { get_resource: ms_net }
      ip_version: 6
      ipv6_address_mode: slaac
      ipv6_ra_mode: slaac
      subnetpool: { get_param: ipv6_subnetpool }

  ms_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: external_net }

  ms_router_nic_v4:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: ms_router }
      subnet_id: { get_resource: ms_subnet_v4 }

  ms_router_nic_v6:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: ms_router }
      subnet_id: { get_resource: ms_subnet_v6 }

  sg_rdp_v4:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        repeat:
          for_each:
            <%net%>: { get_param: allow_rdp_from_v4 }
          template:
            protocol: tcp
            ethertype: IPv4
            port_range_min: 3389
            port_range_max: 3389
            remote_ip_prefix: <%net%>

  sg_rdp_v6:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        repeat:
          for_each:
            <%net%>: { get_param: allow_rdp_from_v6 }
          template:
            protocol: tcp
            ethertype: IPv6
            port_range_min: 3389
            port_range_max: 3389
            remote_ip_prefix: <%net%>

# SERVER PORTS
  fileserver_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: ms_net }
      fixed_ips:
        - subnet_id: { get_resource: ms_subnet_v4 }
          ip_address: 192.168.123.12
        - subnet_id: { get_resource: ms_subnet_v6 }
      security_groups:
        - default
        - { get_resource: sg_rdp_v4 }
        - { get_resource: sg_rdp_v6 }

  dc1_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: ms_net }
      fixed_ips:
        - subnet_id: { get_resource: ms_subnet_v4 }
          ip_address: 192.168.123.10
        - subnet_id: { get_resource: ms_subnet_v6 }
      security_groups:
        - default
        - { get_resource: sg_rdp_v4 }
        - { get_resource: sg_rdp_v6 }

  dc2_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: ms_net }
      fixed_ips:
        - subnet_id: { get_resource: ms_subnet_v4 }
          ip_address: 192.168.123.11
        - subnet_id: { get_resource: ms_subnet_v6 }
      security_groups:
        - default
        - { get_resource: sg_rdp_v4 }
        - { get_resource: sg_rdp_v6 }

# VOLUMES

  fileserver_volume:
    type: OS::Cinder::Volume
    properties:
      size: 20
      volume_type: SSD-300

# INSTANCES
  dc1:
    type: OS::Nova::Server
    properties:
      name: { list_join: ['-', [{ get_param: environment }, dc1 ]]}
      image: { get_param: server_image }
      flavor: { get_param: server_flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: dc1_port }

  dc2:
    type: OS::Nova::Server
    properties:
      name: { list_join: ['-', [{ get_param: environment }, dc2 ]]}
      image: { get_param: server_image }
      flavor: { get_param: server_flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: dc2_port }

  fileserver:
    type: OS::Nova::Server
    properties:
      name: { list_join: ['-', [{ get_param: environment }, fileserver ]]}
      image: { get_param: server_image }
      flavor: { get_param: server_flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: fileserver_port }

  fileserver_disk:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: fileserver }
      volume_id: { get_resource: fileserver_volume }

  clients:
    type: OS::Heat::ResourceGroup
    properties:
      count: 2
      resource_def:
        type: OS::Nova::Server
        properties:
          name: { list_join: ['-', [{ get_param: environment }, client-%index% ]]}
          image: { get_param: client_image }
          flavor: { get_param: client_flavor }
          key_name: { get_param: key_name }
          networks:
            - network: { get_resource: ms_net }
          security_groups:
            - default
            - { get_resource: sg_rdp_v4 }
            - { get_resource: sg_rdp_v6 }

